datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Task {
  id              Int       @default(autoincrement()) @id
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  name            String    @db.VarChar(255)
  description   String    @db.VarChar(600)
  project   Project @relation(fields: [projectId], references: [id])
  projectId       Int
  users UsersOnTasks[]       
}

model Project {
  id              Int       @default(autoincrement()) @id
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  name            String    @db.VarChar(255)
  description   String    @db.VarChar(600)
  tasks           Task[]
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId       Int
}

model Workspace {
  id              Int       @default(autoincrement()) @id
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  name            String    @db.VarChar(255)
  description   String    @db.VarChar(600)
  projects           Project[]
}

model User {
  id              Int       @default(autoincrement()) @id
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  firstName            String    @db.VarChar(255)
  lastName            String    @db.VarChar(255)
  tasks UsersOnTasks[]
  email String  @unique     
}

model UsersOnTasks {
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     Int // relation scalar field (used in the `@relation` attribute above)
  user   User @relation(fields: [userId], references: [id])
  userId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())

  @@id([taskId, userId])
}